---
  - hosts: all
    become: yes
    gather_facts: yes

    tasks:

      - name: modprobe - load kernel modules
        modprobe:
          name: "{{ item }}"
          state: present 
        with_items:
            - br_netfilter
            - ip6_udp_tunnel
            - ip_set
            - ip_set_hash_ip
            - ip_set_hash_net
            - iptable_filter
            - iptable_nat
            - iptable_mangle
            - iptable_raw
            - nf_conntrack_netlink
            - nf_conntrack
            - nf_conntrack_ipv4
            - nf_defrag_ipv4
            - nf_nat
            - nf_nat_ipv4
            - nf_nat_masquerade_ipv4
            - nfnetlink
            - udp_tunnel
            - veth
            - vxlan
            - x_tables
            - xt_addrtype
            - xt_conntrack
            - xt_comment
            - xt_mark
            - xt_multiport
            - xt_nat
            - xt_recent
            - xt_set
            - xt_statistic
            - xt_tcpudp

      - name: generate ssh keys in VM
        command: ssh-keygen -q -t rsa -f ~/.ssh/id_rsa -C "" -N ""

      - name: Add generated key to authorized keys
        authorized_key:
          user: "{{ssh_username}}"
          key: ~/.ssh/id_rsa.pub

      - name: Copy private key to host
        copy:
            dest: ../id_rsa
            src: ~/.ssh/id_rsa 
            remote_src: yes

      - name: Copy public key to host
        copy:
            dest: ../id_rsa.pub
            src: ~/.ssh/id_rsa.pub
            remote_src: yes


      - name: Add generated key to authorized keys
        authorized_key:
          user: "{{ssh_username}}"
          key: "{{ lookup('file','../id_rsa.pub')}}"


      - name: add docker repo key
        apt_key:
          url: "https://download.docker.com/linux/ubuntu/gpg"
          id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"

      - name: add docker repo
        apt_repository:
          repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"


      - name: install docker and etcd
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
            - docker-ce
            - docker-ce-cli
            - containerd.io
            - etcd

      - name: Add user to "docker" group
        user:
          name: "{{ ssh_username }}"
          groups: "docker"
          append: true


      - name: download rke binary
        get_url:
          dest: ~/rke 
          url: https://github.com/rancher/rke/releases/download/{{ rke_version }}/rke_linux-amd64
          mode: 0744
          owner: "{{ ssh_username }}"

      # - name: copy rke binary
      #   copy:
      #     src: ../rke/rke
      #     dest: "/home/{{ ssh_username }}/rke"
      #     mode: 0744
      #     owner: "{{ ssh_username }}"

      - name: copy cluster.yaml
        copy:
          src: ../rke/cluster.yaml
          dest: "/home/{{ ssh_username }}/cluster.yaml"
          owner: "{{ ssh_username }}"


      - name: bootstrap the cluster using rke
        shell: ~/rke up --config cluster.yaml


      - name: copy kube_config file to host running packer
        copy:
          src: ~/kube_config_cluster.yml
          dest: ../kube_config_cluster.yml
          remote_src: yes